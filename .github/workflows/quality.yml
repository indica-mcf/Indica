# This workflow will install Python dependencies and run linters

name: linting

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - develop

jobs:

  lint:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Lint the code
      env:
        SKIP: no-commit-to-branch
      uses: pre-commit/action@v3.0.0

  static-analysis:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.4.2

    - name: Configure poetry
      shell: bash
      run: python -m poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s python -m poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      shell: bash
      run: |
        python -m poetry install

    - name: Lint the code
      shell: bash
      run: poetry run mypy indica tests
