# This workflow will test that documentation is successfully generated

name: sphinx docs

on:
  pull_request:
  push:
    branches:
      - master
      - develop
    paths:
      - .github/workflows/docs.yml
      - indica/**
      - doc/**
      - poetry.lock

jobs:
  docs:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-pip-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: source .venv/bin/activate &&
           (timeout 10s pip --version || (rm -rf .venv && echo "::set-output name=cache-bad::true"))
      id: cache-checkup

    - name: Install dependencies
      shell: bash
      run: python -m venv .venv &&
           source .venv/bin/activate &&
           pip install .[docs]
      if: ${{ steps.cache-venv.ouputs.cache-hit != 'true' || steps.cache-checkup.outputs.cache-bad == 'true'}}

    - name: Test docs build successfully
      run: source .venv/bin/activate &&
           make -C doc html
